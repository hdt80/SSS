CXX = g++
CC = gcc

LIBS = -Llib/win -lengine -lglfw3 -lglew32 -lopengl32 -lWS2_32

SOURCEDIR = code/sources
BUILDDIR = build

SOURCES = $(wildcard $(SOURCEDIR)/*.cpp)
SOURCES += $(wildcard $(SOURCEDIR)/*/*.cpp)
SOURCES += $(wildcard $(SOURCEDIR)/*/*/*.cpp)

OBJECTS = $(patsubst $(SOURCEDIR)/%.cpp, $(BUILDDIR)/%.o, $(SOURCES))

CSOURCES = $(wildcard $(SOURCEDIR)/*/*.c)
COBJECTS = $(patsubst $(SOURCEDIR)/%.c, $(BUILDDIR)/%.o, $(CSOURCES))

CXXFLAGS = -Wall -Wno-comment -Wsign-compare -Winline -g -c -std=c++11 -I include -I code/headers
CFLAGS = -c -I code/headers -I include
LDFLAGS = $(LIBS) 

EXE = app

static: $(OBJECTS) $(COBJECTS)
	mkdir -p ./dist/mac
	$(AR) rvs dist/win/libengine.a $(addprefix $(BUILDDIR)/, $(notdir $^))
	cp -r ./code/headers/* ./dist/win

build: $(EXE)

	
$(EXE): $(OBJECTS) $(COBJECTS)
		$(CXX) $(addprefix $(BUILDDIR)/, $(notdir $^)) $(LDFLAGS) -o ./bin/$@

$(OBJECTS): $(BUILDDIR)/%.o : $(SOURCEDIR)/%.cpp
		$(CXX) $(CXXFLAGS) $< -o $(BUILDDIR)/$(notdir $@) 

$(COBJECTS): $(BUILDDIR)/%.o : $(SOURCEDIR)/%.c
		$(CC) $(CFLAGS) $< -o $(BUILDDIR)/$(notdir $@)

clean:
	rm $(BUILDDIR)/*.o && rm ./bin/$(EXE)

network:
	./bin/$(EXE) arugment

run:
	./bin/$(EXE)

debug:
	gdb ./bin/$(EXE)
